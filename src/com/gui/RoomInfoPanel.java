/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Prabhashi
 */
public class RoomInfoPanel extends javax.swing.JPanel {

    private final NumberFormat format = NumberFormat.getInstance(Locale.US);

    private String query;
    private PreparedStatement statement;
    private ResultSet result;

    private int roomId;
    private String roomNo;
    private String roomType;
    private double roomPrice = 0.00;
    private boolean isAvailable;

    /**
     * Creates new form RoomInfoPanel
     */
    public RoomInfoPanel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxRoomType = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListRooms = new javax.swing.JList();
        jButtonAddNewRoom = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldRId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldRNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBoxAvailable = new javax.swing.JCheckBox();
        jButtonCancel = new javax.swing.JButton();
        jFormattedTextFieldPrice = new javax.swing.JFormattedTextField();
        jButtonEdit = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxRoomTypeEdit = new javax.swing.JComboBox();
        jButtonDiscard = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Room Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jLabel1.setText("Room Type : ");

        jComboBoxRoomType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Medium", "VIP" }));
        jComboBoxRoomType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxRoomTypeItemStateChanged(evt);
            }
        });
        jComboBoxRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoomTypeActionPerformed(evt);
            }
        });

        jListRooms.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListRooms.setToolTipText("");
        jListRooms.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListRoomsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jListRooms);

        jButtonAddNewRoom.setText("Add New Room");
        jButtonAddNewRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddNewRoomActionPerformed(evt);
            }
        });

        jLabel2.setText("Room Id :");

        jTextFieldRId.setEnabled(false);

        jLabel3.setText("Room No :");

        jTextFieldRNo.setEnabled(false);

        jLabel4.setText("Price (per day) Rs :");

        jLabel5.setText("Available :");

        jCheckBoxAvailable.setSelected(true);
        jCheckBoxAvailable.setEnabled(false);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jFormattedTextFieldPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextFieldPrice.setEnabled(false);

        jButtonEdit.setText("Edit");
        jButtonEdit.setEnabled(false);
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.setEnabled(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);

        jLabel6.setText("Room Type :");

        jComboBoxRoomTypeEdit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Medium", "VIP" }));

        jButtonDiscard.setText("Discard");
        jButtonDiscard.setEnabled(false);
        jButtonDiscard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButtonAddNewRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCheckBoxAvailable)
                                    .addComponent(jTextFieldRId)
                                    .addComponent(jTextFieldRNo)
                                    .addComponent(jFormattedTextFieldPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                                    .addComponent(jComboBoxRoomTypeEdit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDiscard, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldRId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jComboBoxRoomTypeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldRNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jFormattedTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jCheckBoxAvailable))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddNewRoom)
                    .addComponent(jButtonCancel)
                    .addComponent(jButtonEdit)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonDiscard))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxRoomTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxRoomTypeItemStateChanged
    }//GEN-LAST:event_jComboBoxRoomTypeItemStateChanged

    private void jComboBoxRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoomTypeActionPerformed
        String item = jComboBoxRoomType.getSelectedItem().toString();
        addModelToJList(item);
        jTextFieldRId.setText("");
        jTextFieldRNo.setText("");
        jComboBoxRoomTypeEdit.setSelectedItem(item);
        jFormattedTextFieldPrice.setText("");
        jCheckBoxAvailable.setSelected(true);

//        jListRooms.setSelectedIndex(0);
    }//GEN-LAST:event_jComboBoxRoomTypeActionPerformed

    private void addModelToJList(String item) {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
            query = "Select * from room where room_type=?";
            statement = connection.prepareStatement(query);
            statement.setString(1, item);
            result = statement.executeQuery();

            String roomNum;
            DefaultListModel model = new DefaultListModel();

            while (result.next()) {
                roomNum = result.getString("room_no");
                model.addElement(roomNum);
            }

            jListRooms.setModel(model);

        } catch (Exception e) {
            System.out.println(e);
        }
    }


    private void jButtonAddNewRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddNewRoomActionPerformed
        jListRooms.setSelectedIndex(-1);
        jListRooms.setEnabled(false);
        jComboBoxRoomType.setEnabled(false);

        jComboBoxRoomTypeEdit.setSelectedItem(jComboBoxRoomType.getSelectedItem());
        jComboBoxRoomTypeEdit.setEnabled(false);

        jTextFieldRNo.setText("");
        jFormattedTextFieldPrice.setText("");
        jCheckBoxAvailable.setSelected(true);

        jButtonDiscard.setEnabled(true);
        jButtonEdit.setEnabled(false);

        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
            query = "Select * from room order by id desc limit 1";
            statement = connection.prepareStatement(query);
            result = statement.executeQuery();

            if (result.next()) {
                roomId = result.getInt("id");
                roomId += 1;
                String id = Integer.toString(roomId);
                jTextFieldRId.setText(id);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

        jTextFieldRNo.setEnabled(true);
        jFormattedTextFieldPrice.setEnabled(true);
        jCheckBoxAvailable.setEnabled(true);
        jButtonSave.setEnabled(true);
    }//GEN-LAST:event_jButtonAddNewRoomActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed

        if (jTextFieldRNo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the Room No!");
        } else if (jFormattedTextFieldPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the Price!");
        } else {

            roomNo = jTextFieldRNo.getText();
            roomType = jComboBoxRoomTypeEdit.getSelectedItem().toString();
            try {
                Number number = format.parse(jFormattedTextFieldPrice.getText());
                roomPrice = number.doubleValue();

            } catch (Exception e) {
                System.out.println(e);
            }
//        roomPrice = Float.parseFloat(jFormattedTextFieldPrice.getText());
            isAvailable = jCheckBoxAvailable.isSelected();
//TODO handle if a duplicate value is entered - catch MySQLIntegrityConstraintViolationException & show msg dialog
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {

                roomId = Integer.parseInt(jTextFieldRId.getText());

                query = "Select * from room where id=?";
                statement = connection.prepareStatement(query);
                statement.setInt(1, roomId);

                result = statement.executeQuery();

                if (result.next()) {
                    query = "Update room set room_no=?, room_type=?, price=?, is_available=? where id=?";
                    statement = connection.prepareStatement(query);
                    statement.setInt(5, roomId);

                } else {
                    query = "Insert into room(room_no, room_type, price, is_available) values (?,?,?,?)";
                    statement = connection.prepareStatement(query);
                }

                statement.setString(1, roomNo);
                statement.setString(2, roomType);
                statement.setDouble(3, roomPrice);
                statement.setBoolean(4, isAvailable);

                statement.executeUpdate();

                JOptionPane.showMessageDialog(null, "Information were added successfully!");

                jTextFieldRNo.setEnabled(false);
                jComboBoxRoomTypeEdit.setEnabled(false);
                jFormattedTextFieldPrice.setEnabled(false);
                jCheckBoxAvailable.setEnabled(false);
                jButtonSave.setEnabled(false);

//                  String item = jComboBoxRoomType.getSelectedItem().toString();
                addModelToJList(roomType);
                jComboBoxRoomType.setSelectedItem(roomType);

                jListRooms.setSelectedValue(roomNo, true);
                jButtonEdit.setEnabled(true);

                jListRooms.setEnabled(true);
                jComboBoxRoomType.setEnabled(true);

//                TODO Bug Fix: If an error(Exception) occurs, even then the id is incremented by 1 and therefore the value shown in Id text box will be incorrect
            } catch (com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(null, "Please enter a unique name for Room No!");//TODO is this the correct way of doing this?

            } catch (Exception e) {
                System.out.println(e);
            }
        }


    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jListRoomsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListRoomsValueChanged
        if (!evt.getValueIsAdjusting()) { // To perform actions when value adjusting is over

            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
                if (jListRooms.getSelectedIndex() != -1) {
                    roomNo = jListRooms.getSelectedValue().toString();
                    query = "Select * from room where room_no=?";
                    statement = connection.prepareStatement(query);
                    statement.setString(1, roomNo);
                    result = statement.executeQuery();

                    if (result.next()) {
                        roomId = result.getInt("id");
                        roomPrice = result.getDouble("price");
                        isAvailable = result.getBoolean("is_available");
                    }
                    jTextFieldRId.setText(Integer.toString(roomId));
                    jTextFieldRNo.setText(roomNo);
                    jFormattedTextFieldPrice.setText(format.format(roomPrice));
//                jFormattedTextFieldPrice.setText(Double.toString(roomPrice));

                    jCheckBoxAvailable.setSelected(isAvailable);
                    jButtonEdit.setEnabled(true);

                }

            } catch (Exception e) {
                System.out.println(e);
            }

        }

    }//GEN-LAST:event_jListRoomsValueChanged

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        jListRooms.setEnabled(false);
        jComboBoxRoomType.setEnabled(false);

        jTextFieldRNo.setEnabled(true);
        jComboBoxRoomTypeEdit.setEnabled(true);
        jFormattedTextFieldPrice.setEnabled(true);
        jCheckBoxAvailable.setEnabled(true);
        jButtonSave.setEnabled(true);
        jButtonDiscard.setEnabled(true);
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        resetRoomInfo();
        MainInterface.setDefaultLayout();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscardActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure? This will discard all the unsaved changes!");
        if (dialogResult == JOptionPane.YES_OPTION) {
            resetRoomInfo();
        }
    }//GEN-LAST:event_jButtonDiscardActionPerformed

    public void resetRoomInfo() {
        jComboBoxRoomType.setSelectedIndex(0);
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
            roomType = jComboBoxRoomType.getSelectedItem().toString();
            query = "Select * from room where room_type=?";
            statement = connection.prepareStatement(query);
            statement.setString(1, roomType);
            result = statement.executeQuery();

            DefaultListModel model = new DefaultListModel();
            String roomNum;
            while (result.next()) {
                roomNum = result.getString("room_no");
                model.addElement(roomNum);
            }
            jListRooms.setModel(model);

        } catch (Exception e) {
            System.out.println(e);
        }
        jListRooms.setEnabled(true);
        jComboBoxRoomType.setEnabled(true);

        jTextFieldRNo.setEnabled(false);
        jComboBoxRoomTypeEdit.setEnabled(false);
        jFormattedTextFieldPrice.setEnabled(false);
        jCheckBoxAvailable.setEnabled(false);

        jTextFieldRId.setText("");
        jTextFieldRNo.setText("");
        jComboBoxRoomTypeEdit.setSelectedIndex(0);
        jFormattedTextFieldPrice.setText("");
        jCheckBoxAvailable.setSelected(true);

        jButtonSave.setEnabled(false);
        jButtonDelete.setEnabled(false);
        jButtonEdit.setEnabled(false);
        jButtonDiscard.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddNewRoom;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDiscard;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxAvailable;
    private javax.swing.JComboBox jComboBoxRoomType;
    private javax.swing.JComboBox jComboBoxRoomTypeEdit;
    private javax.swing.JFormattedTextField jFormattedTextFieldPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JList jListRooms;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldRId;
    private javax.swing.JTextField jTextFieldRNo;
    // End of variables declaration//GEN-END:variables
}
