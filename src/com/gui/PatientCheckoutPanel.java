/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;

/**
 *
 * @author Prabhashi
 */
public class PatientCheckoutPanel extends javax.swing.JPanel {

    private final NumberFormat format = NumberFormat.getInstance(Locale.US);
    final DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
    private String query;
    private PreparedStatement statement;
    private ResultSet result;

//    private final double DEFAULT_CHARGES = 0.00;
    private Date date;
    private int id;
    private String name;
    private String gender;
    private int age;
    private String phoneNo;
    private String address;
    private String disease;
    private String comments;
    private double totalPrice = 0.00;
    private String status;
    private Date checkoutDate;
    private boolean isCheckout;

    private int roomId;
    private String roomNo;
    private String roomType;
    private double roomPrice;
    private double charges;

    private int days;
    private double totalRoomPrice;

    /**
     * Creates new form PatientCheckoutPanel
     */
    public PatientCheckoutPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDiscard = new javax.swing.JButton();
        jComboBoxGenderEdit = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldNameEdit = new javax.swing.JTextField();
        jFormattedTextFieldRegDateEdit = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jFormattedTextFieldAgeEdit = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaAddressEdit = new javax.swing.JTextArea();
        jFormattedTextFieldPhoneNoEdit = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaCommentsEdit = new javax.swing.JTextArea();
        jTextFieldDiseaseEdit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextFieldCheckoutDate = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jFormattedTextFieldTotalPrice = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaStatus = new javax.swing.JTextArea();
        jButtonPrint = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxRoomType = new javax.swing.JComboBox();
        jTextFieldDays = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldRoomNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldRoomPrice = new javax.swing.JTextField();
        jTextFieldRoomTotalPrice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonSearchPatient = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxName = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jFormattedTextFieldID = new javax.swing.JTextField();
        jFormattedTextFieldCharges = new javax.swing.JFormattedTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Checkout", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18))); // NOI18N

        jButtonDiscard.setText("Discard Changes");
        jButtonDiscard.setEnabled(false);
        jButtonDiscard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscardActionPerformed(evt);
            }
        });

        jComboBoxGenderEdit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Male", "Female", "Other" }));
        jComboBoxGenderEdit.setEnabled(false);

        jLabel16.setText("Phone No :");

        jLabel14.setText("Age :");

        jLabel25.setText("Registered Date :");

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel20.setText("Disease :");

        jTextFieldNameEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldNameEdit.setEnabled(false);

        jFormattedTextFieldRegDateEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jFormattedTextFieldRegDateEdit.setEnabled(false);
        jFormattedTextFieldRegDateEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldRegDateEditActionPerformed(evt);
            }
        });

        jLabel13.setText("Name :");

        jFormattedTextFieldAgeEdit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldAgeEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jFormattedTextFieldAgeEdit.setEnabled(false);

        jLabel15.setText("Gender :");

        jTextAreaAddressEdit.setColumns(20);
        jTextAreaAddressEdit.setLineWrap(true);
        jTextAreaAddressEdit.setRows(5);
        jTextAreaAddressEdit.setWrapStyleWord(true);
        jTextAreaAddressEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextAreaAddressEdit.setEnabled(false);
        jScrollPane3.setViewportView(jTextAreaAddressEdit);

        jFormattedTextFieldPhoneNoEdit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldPhoneNoEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jFormattedTextFieldPhoneNoEdit.setEnabled(false);

        jLabel21.setText("Comments :");

        jLabel17.setText("Address :");

        jButtonSave.setText("Save");
        jButtonSave.setEnabled(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jTextAreaCommentsEdit.setColumns(20);
        jTextAreaCommentsEdit.setLineWrap(true);
        jTextAreaCommentsEdit.setRows(5);
        jTextAreaCommentsEdit.setWrapStyleWord(true);
        jTextAreaCommentsEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextAreaCommentsEdit.setEnabled(false);
        jScrollPane4.setViewportView(jTextAreaCommentsEdit);

        jTextFieldDiseaseEdit.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldDiseaseEdit.setEnabled(false);

        jLabel1.setText("Checkout Date :");

        jFormattedTextFieldCheckoutDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy/MM/dd"))));
        jFormattedTextFieldCheckoutDate.setText(dateFormat.format(new java.sql.Date(System.currentTimeMillis())));
        jFormattedTextFieldCheckoutDate.setEnabled(false);

        jLabel2.setText("Total Price :");

        jFormattedTextFieldTotalPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextFieldTotalPrice.setEnabled(false);

        jLabel3.setText("Status :");

        jTextAreaStatus.setColumns(20);
        jTextAreaStatus.setLineWrap(true);
        jTextAreaStatus.setRows(5);
        jTextAreaStatus.setWrapStyleWord(true);
        jTextAreaStatus.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaStatus);

        jButtonPrint.setText("Print");
        jButtonPrint.setEnabled(false);
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Room Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jComboBoxRoomType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal", "Medium", "VIP" }));
        jComboBoxRoomType.setEnabled(false);

        jTextFieldDays.setToolTipText("");
        jTextFieldDays.setEnabled(false);

        jLabel8.setText("No. of Days :");

        jTextFieldRoomNo.setEnabled(false);

        jLabel7.setText("Price (per day) Rs :");

        jLabel9.setText("Total price for Room :");

        jLabel5.setText("Room Type :");

        jLabel4.setText("Room No :");

        jTextFieldRoomPrice.setEnabled(false);

        jTextFieldRoomTotalPrice.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxRoomType, 0, 168, Short.MAX_VALUE)
                    .addComponent(jTextFieldDays)
                    .addComponent(jTextFieldRoomTotalPrice)
                    .addComponent(jTextFieldRoomNo)
                    .addComponent(jTextFieldRoomPrice))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldRoomPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldRoomTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel12.setText("Charges :");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonSearchPatient.setText("Search");
        jButtonSearchPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchPatientActionPerformed(evt);
            }
        });

        jLabel6.setText("Patient ID :");

        jComboBoxName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxNameItemStateChanged(evt);
            }
        });
        jComboBoxName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNameActionPerformed(evt);
            }
        });
        jComboBoxName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxNameKeyReleased(evt);
            }
        });

        jLabel10.setText("Patient Name :");

        jFormattedTextFieldID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldIDKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButtonSearchPatient)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jFormattedTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearchPatient))
                .addContainerGap())
        );

        jFormattedTextFieldCharges.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jFormattedTextFieldCharges.setEnabled(false);
        jFormattedTextFieldCharges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldChargesActionPerformed(evt);
            }
        });
        jFormattedTextFieldCharges.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldChargesFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jButtonPrint)
                                .addGap(36, 36, 36)
                                .addComponent(jButtonDiscard))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDiseaseEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedTextFieldPhoneNoEdit)
                                    .addComponent(jComboBoxGenderEdit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextFieldAgeEdit)
                                    .addComponent(jTextFieldNameEdit)
                                    .addComponent(jFormattedTextFieldRegDateEdit)
                                    .addComponent(jFormattedTextFieldCheckoutDate, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel12)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jButtonCancel)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jFormattedTextFieldTotalPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                                    .addComponent(jFormattedTextFieldCharges, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jFormattedTextFieldCheckoutDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(jFormattedTextFieldRegDateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldNameEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFormattedTextFieldAgeEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBoxGenderEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFormattedTextFieldPhoneNoEdit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 10, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jFormattedTextFieldCharges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jFormattedTextFieldTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDiseaseEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSave)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonDiscard)
                                .addComponent(jButtonCancel))
                            .addComponent(jButtonPrint)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDiscardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscardActionPerformed
//  set new fields' values to null
        resetFormCheckout();
    }//GEN-LAST:event_jButtonDiscardActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
//  set new fields' values to null & close card
        resetFormCheckout();
        MainInterface.setDefaultLayout();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jComboBoxNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxNameItemStateChanged
        resetFormEdit();
//      if changed, remove field values
        jFormattedTextFieldCheckoutDate.setText(dateFormat.format(new java.sql.Date(System.currentTimeMillis())));
        jFormattedTextFieldCharges.setText("");

        jFormattedTextFieldTotalPrice.setText("");
        jTextAreaStatus.setText("");

        jButtonSave.setEnabled(false);
        jButtonDiscard.setEnabled(false);

        jFormattedTextFieldCheckoutDate.setEnabled(false);
        jFormattedTextFieldCharges.setEnabled(false);
        jFormattedTextFieldTotalPrice.setEnabled(false);
        jTextAreaStatus.setEnabled(false);
    }//GEN-LAST:event_jComboBoxNameItemStateChanged

    private void jComboBoxNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNameActionPerformed

        jButtonSave.setEnabled(false);
        jButtonDiscard.setEnabled(false);

        if (jComboBoxName.getSelectedIndex() != -1) {
            String nameSelected = jComboBoxName.getSelectedItem().toString();

            String[] values = nameSelected.split(" - ");
            name = values[0];
            String id = values[1];
            jFormattedTextFieldID.setText(id);
        }
    }//GEN-LAST:event_jComboBoxNameActionPerformed

    private void jComboBoxNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxNameKeyReleased

    }//GEN-LAST:event_jComboBoxNameKeyReleased

    private void jFormattedTextFieldRegDateEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldRegDateEditActionPerformed

    }//GEN-LAST:event_jFormattedTextFieldRegDateEditActionPerformed

    private void jFormattedTextFieldIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldIDKeyReleased
        String val = jFormattedTextFieldID.getText();

        //        TODO Fix bug: reset is done even if an arrow key is pressed
        resetFormEdit();

        jFormattedTextFieldCheckoutDate.setText(dateFormat.format(new java.sql.Date(System.currentTimeMillis())));
        jFormattedTextFieldCharges.setText("");
        jFormattedTextFieldTotalPrice.setText("");
        jTextAreaStatus.setText("");

        jButtonSave.setEnabled(false);
        jButtonDiscard.setEnabled(false);

        jFormattedTextFieldCheckoutDate.setEnabled(false);
        jFormattedTextFieldCharges.setEnabled(false);
        jFormattedTextFieldTotalPrice.setEnabled(false);
        jTextAreaStatus.setEnabled(false);

        if (isPositiveInteger(val)) {
            id = Integer.parseInt(jFormattedTextFieldID.getText());
            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
                query = "select * from patient where id = ?";
                statement = connection.prepareStatement(query);
                statement.setInt(1, id);
                result = statement.executeQuery();

                if (result.next()) {
                    name = result.getString("name");
                    jComboBoxName.setSelectedItem(name + " - " + id);
                } else {
                    jComboBoxName.setSelectedIndex(-1);
                }

            } catch (Exception e) {

            }
        } else {
            jComboBoxName.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_jFormattedTextFieldIDKeyReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
//       dialog box if any of the fields are empty

        if (jFormattedTextFieldCheckoutDate.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter the Checkout Date !");

        } else if (jFormattedTextFieldTotalPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter the Total Price !");

        } else if (jTextAreaStatus.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter the Status !");

        } else {

            id = Integer.parseInt(jFormattedTextFieldID.getText());

            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
                query = "Update Patient set checkout_date=?, total_price=?, status=?, is_checkout=?, charges=? where id=?";
                statement = connection.prepareStatement(query);

                checkoutDate = dateFormat.parse(jFormattedTextFieldCheckoutDate.getText());
                java.sql.Date checkDate = new java.sql.Date(checkoutDate.getTime());

//                totalPrice = Float.parseFloat(jFormattedTextFieldTotalPrice.getText());
                try {
                    Number number = format.parse(jFormattedTextFieldTotalPrice.getText());
                    totalPrice = number.doubleValue();
                    charges = format.parse(jFormattedTextFieldCharges.getText()).doubleValue();
                } catch (Exception e) {
                    System.out.println(e);
                }

                status = jTextAreaStatus.getText();

                statement.setDate(1, checkDate);
                statement.setDouble(2, totalPrice);
                statement.setString(3, status);
                statement.setBoolean(4, true);
                statement.setDouble(5, charges);
                statement.setInt(6, id);

                statement.executeUpdate();

            } catch (Exception ex) {
                System.out.println(ex);
            }

            JOptionPane.showMessageDialog(null, "Changes were successfully added !");
            //      Enable Print button
            jButtonPrint.setEnabled(true);
            jFormattedTextFieldCheckoutDate.setEnabled(false);
            jFormattedTextFieldCharges.setEnabled(false);
            jFormattedTextFieldTotalPrice.setEnabled(false);
            jTextAreaStatus.setEnabled(false);
        }


    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSearchPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchPatientActionPerformed
        if (jFormattedTextFieldID.getText().equals("")) {
            if (jComboBoxName.getSelectedIndex() == -1) {
                jButtonSave.setEnabled(false);
                jButtonDiscard.setEnabled(false);
//              disable checkout fields (not essential?)
                jFormattedTextFieldCheckoutDate.setEnabled(false);
                jFormattedTextFieldCharges.setEnabled(false);
                jFormattedTextFieldTotalPrice.setEnabled(false);
                jTextAreaStatus.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Enter Patient ID or Name!");
            } else {
                //if Name is selected and id is not selected

//                TODO change: Print btn enable/disble according to a isPrinted value set in Print interface (not based on isCheckout/pressing Print btn)
                String nameSelected = jComboBoxName.getSelectedItem().toString();
                String[] values = nameSelected.split(" - ");
                name = values[0];
                id = Integer.parseInt(values[1]);
                setFieldValues("select * from patient p inner join room r on p.room_id=r.id where p.id = ?", id);

                try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
                    query = "Select * from patient where id=?";
                    statement = connection.prepareStatement(query);
                    statement.setInt(1, id);
                    result = statement.executeQuery();
//                    isCheckout = false;
                    if (result.next()) {
                        isCheckout = result.getBoolean("is_checkout");
                        checkoutDate = result.getDate("checkout_date");
                        totalPrice = result.getFloat("total_price");
                        status = result.getString("status");
                        charges = result.getFloat("charges");
                    }
                } catch (Exception e) {
                    System.out.println(e);
                }
                if (isCheckout) {
                    jFormattedTextFieldCheckoutDate.setEnabled(false);
                    jFormattedTextFieldCharges.setEnabled(false);
                    jFormattedTextFieldTotalPrice.setEnabled(false);
                    jTextAreaStatus.setEnabled(false);
                    jButtonSave.setEnabled(false);
                    jButtonDiscard.setEnabled(false);

                    jFormattedTextFieldCharges.setText(Double.toString(charges));
                    jFormattedTextFieldCheckoutDate.setText(dateFormat.format(checkoutDate));
                    jFormattedTextFieldTotalPrice.setText(Double.toString(totalPrice));
                    jTextAreaStatus.setText(status);
                } else {
//                    jFormattedTextFieldCheckoutDate.setEnabled(true);
                    jFormattedTextFieldCharges.setEnabled(true);
                    jFormattedTextFieldTotalPrice.setEnabled(true);
                    jTextAreaStatus.setEnabled(true);
                    jButtonSave.setEnabled(true);
                    jButtonDiscard.setEnabled(true);

                }

            }
        } else {
            //if id is selected
            id = Integer.parseInt(jFormattedTextFieldID.getText());
//            setFieldValues("select * from patient where id = ?", id);
            setFieldValues("select * from patient p inner join room r on p.room_id=r.id where p.id = ?", id);
//            jFormattedTextFieldCheckoutDate.setEnabled(true);
            jFormattedTextFieldCharges.setEnabled(true);
            jFormattedTextFieldTotalPrice.setEnabled(true);
            jTextAreaStatus.setEnabled(true);
            jButtonSave.setEnabled(true);
            jButtonDiscard.setEnabled(true);

            try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {
                query = "Select * from patient where id=?";
                statement = connection.prepareStatement(query);
                statement.setInt(1, id);
                result = statement.executeQuery();
//                    isCheckout = false;
                if (result.next()) {
                    isCheckout = result.getBoolean("is_checkout");
                    checkoutDate = result.getDate("checkout_date");
                    totalPrice = result.getFloat("total_price");
                    status = result.getString("status");
                    charges = result.getFloat("charges");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            if (isCheckout) {
                System.out.println("true");
                jFormattedTextFieldCheckoutDate.setEnabled(false);
                jFormattedTextFieldCharges.setEnabled(false);
                jFormattedTextFieldTotalPrice.setEnabled(false);
                jTextAreaStatus.setEnabled(false);
                jButtonSave.setEnabled(false);
                jButtonDiscard.setEnabled(false);

                jFormattedTextFieldCharges.setText(Double.toString(charges));
                jFormattedTextFieldCheckoutDate.setText(dateFormat.format(checkoutDate));
                jFormattedTextFieldTotalPrice.setText(Double.toString(totalPrice));
                jTextAreaStatus.setText(status);
            } else {
                System.out.println("false");

//                jFormattedTextFieldCheckoutDate.setEnabled(true);
                jFormattedTextFieldCharges.setEnabled(true);
                jFormattedTextFieldTotalPrice.setEnabled(true);
                jTextAreaStatus.setEnabled(true);
                jButtonSave.setEnabled(true);
                jButtonDiscard.setEnabled(true);

            }

        }
    }//GEN-LAST:event_jButtonSearchPatientActionPerformed

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        // TODO Print code
//        TODO create a col in table as 'is_billed', make true if clicked(if clicked Print in the 'Print interface')
//        TODO in 'search btn action performed', make enable if is_billed false, otherwise disable
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jFormattedTextFieldChargesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldChargesFocusLost
//      TODO bud fix: remove try-catch, instead handle jFormattedTextFieldCharges to enter only integer/double (it doesn't validate as a formatted field,coz of this FocusLost)
//TODO Focus subsystems to validate input (in bookmarks)
        try {
            if (jFormattedTextFieldCharges.getText().equals("")) {
                jFormattedTextFieldTotalPrice.setText("");

            } else {
                charges = Double.parseDouble(jFormattedTextFieldCharges.getText());
                double roomCharges = Double.parseDouble(jTextFieldRoomTotalPrice.getText());
                //            TODO change format to 45,678.00 for Total Price
                String totalCharges = Double.toString(charges + roomCharges);
                jFormattedTextFieldTotalPrice.setText(totalCharges);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_jFormattedTextFieldChargesFocusLost

    private void jFormattedTextFieldChargesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldChargesActionPerformed

    }//GEN-LAST:event_jFormattedTextFieldChargesActionPerformed

    private void setFieldValues(String query, Object val) {
        try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital", "root", null)) {

            statement = connection.prepareStatement(query);
            if (val instanceof Integer) {
                int i;
                i = (int) val;
                statement.setInt(1, i);
            } else if (val instanceof String) {
                String str = (String) val;
                statement.setString(1, str);
            }

            result = statement.executeQuery();

            if (result.next()) {

                date = result.getDate("register_date");
                id = result.getInt("id");
                name = result.getString("name");
                gender = result.getString("gender");
                age = result.getInt("age");
                phoneNo = result.getString("phone_no");
                address = result.getString("address");
                disease = result.getString("disease");
                comments = result.getString("comments");

                roomNo = result.getString("room_no");
                roomType = result.getString("room_type");
                roomPrice = result.getDouble("price");
                charges = result.getDouble("charges");

                checkoutDate = new Date(System.currentTimeMillis());
                long diffInMillies = checkoutDate.getTime() - date.getTime();
                days = (int) TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS) + 1;

//                days = 2;
                totalRoomPrice = days * roomPrice;
//                totalPrice = totalRoomPrice + charge;

                jFormattedTextFieldID.setText(Integer.toString(id));
                jFormattedTextFieldRegDateEdit.setText(dateFormat.format(date));
                jTextFieldNameEdit.setText(name);
                jFormattedTextFieldAgeEdit.setText(Integer.toString(age));
                jComboBoxGenderEdit.setSelectedItem(gender);
                jFormattedTextFieldPhoneNoEdit.setText(phoneNo);
                jTextAreaAddressEdit.setText(address);
                jTextFieldDiseaseEdit.setText(disease);
                jTextAreaCommentsEdit.setText(comments);

                jComboBoxName.setSelectedItem(name + " - " + id);
                jTextFieldRoomNo.setText(roomNo);
                jComboBoxRoomType.setSelectedItem(roomType);
                jTextFieldRoomPrice.setText(Double.toString(roomPrice));

                jTextFieldDays.setText(Integer.toString(days));
                jTextFieldRoomTotalPrice.setText(Double.toString(totalRoomPrice));

                jFormattedTextFieldCharges.setText(Double.toString(charges));
                jFormattedTextFieldTotalPrice.setText(Double.toString(totalPrice));

//                jButtonSave.setEnabled(true);
            } else {
//                jButtonSave.setEnabled(false);
                if (val instanceof Integer) {
                    JOptionPane.showMessageDialog(null, "Invalid Patient ID !");

                } else if (val instanceof String) {
                    JOptionPane.showMessageDialog(null, "Invalid Patient Name !");

                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    private boolean isPositiveInteger(String str) {
        if (str.equals("")) {
            return false;
        }
        char c;
        for (int i = 0; i < str.length(); i++) {
            c = str.charAt(i);
            if (c > '9' || c < '0') {
                return false;
            }
        }
        return true;
    }

    public void resetFormCheckout() {
//        jFormattedTextFieldCheckoutDate.setText(dateFormat.format(new java.sql.Date(System.currentTimeMillis())));
//        jFormattedTextFieldCharges.setText(Double.toString(DEFAULT_CHARGES));
        jFormattedTextFieldCharges.setText("");
        jFormattedTextFieldTotalPrice.setText("");
        jTextAreaStatus.setText("");

    }

    public void resetFormEdit() {
        jFormattedTextFieldRegDateEdit.setText("");
        jTextFieldNameEdit.setText("");
        jFormattedTextFieldAgeEdit.setText("");
        jComboBoxGenderEdit.setSelectedIndex(0);
        jFormattedTextFieldPhoneNoEdit.setText("");
        jTextAreaAddressEdit.setText("");
        jTextFieldDiseaseEdit.setText("");
        jTextAreaCommentsEdit.setText("");

        jTextFieldRoomNo.setText("");
        jComboBoxRoomType.setSelectedIndex(0);
        jTextFieldRoomPrice.setText("");
        jTextFieldDays.setText("");
        jTextFieldRoomTotalPrice.setText("");
//        jComboBoxNameEdit.setSelectedItem(name);
    }

    public void setJFormattedTextFieldID(String text) {
        jFormattedTextFieldID.setText(text);
    }

    public void setJComboBoxNameIndex(int index) {
        jComboBoxName.setSelectedIndex(index);
    }

    public void setJComboBoxName(String[] names) {
        jComboBoxName.setModel(new javax.swing.DefaultComboBoxModel(names));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDiscard;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearchPatient;
    private javax.swing.JComboBox jComboBoxGenderEdit;
    private javax.swing.JComboBox jComboBoxName;
    private javax.swing.JComboBox jComboBoxRoomType;
    private javax.swing.JFormattedTextField jFormattedTextFieldAgeEdit;
    private javax.swing.JFormattedTextField jFormattedTextFieldCharges;
    private javax.swing.JFormattedTextField jFormattedTextFieldCheckoutDate;
    private javax.swing.JTextField jFormattedTextFieldID;
    private javax.swing.JFormattedTextField jFormattedTextFieldPhoneNoEdit;
    private javax.swing.JFormattedTextField jFormattedTextFieldRegDateEdit;
    private javax.swing.JFormattedTextField jFormattedTextFieldTotalPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextAreaAddressEdit;
    private javax.swing.JTextArea jTextAreaCommentsEdit;
    private javax.swing.JTextArea jTextAreaStatus;
    private javax.swing.JTextField jTextFieldDays;
    private javax.swing.JTextField jTextFieldDiseaseEdit;
    private javax.swing.JTextField jTextFieldNameEdit;
    private javax.swing.JTextField jTextFieldRoomNo;
    private javax.swing.JTextField jTextFieldRoomPrice;
    private javax.swing.JTextField jTextFieldRoomTotalPrice;
    // End of variables declaration//GEN-END:variables
}
